<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>